<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>